<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>